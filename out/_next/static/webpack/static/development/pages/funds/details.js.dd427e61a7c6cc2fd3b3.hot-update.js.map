{"version":3,"file":"static/webpack/static/development/pages/funds/details.js.dd427e61a7c6cc2fd3b3.hot-update.js","sources":["webpack:///./pages/funds/details.js"],"sourcesContent":["// Shows users detail about particular Fund\n// Here we will have Campaign's address from the URL.\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Fund from '../../ethereum/fund';\nimport Bidding from '../../ethereum/bidding';\nimport { Card, Grid, Button, Modal, Input, Form, Message, Segment, Sidebar, Menu } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport AddChildManagerModalForm from '../../components/modalForms/addChildManager';\nimport InjectTokenModalForm from '../../components/modalForms/injectToken';\nimport WithdrawTokenModalForm from '../../components/modalForms/withdrawTokens';\nimport PotentialChildManagersModal from '../../components/modals/potentialChildManagerList';\nimport FloatTenderModal from '../../components/modals/floatTenderModal';\nimport FinalizeTenderModal from '../../components/modals/finalizeTenderModal';\nimport AddCompanyTenderModalForm from '../../components/modalForms/addTrustedCompanyToTenderModalForm';\nimport BiddingModalForm from '../../components/modalForms/biddingModalForm';\nimport AllotedCompany from '../../components/modals/allotedCompanyModal';\nimport { Link, Router } from '../../routes';\nimport token from '../../ethereum/token';\nimport axios from 'axios'\nimport bcrypt from 'bcryptjs'\nimport ChatApp from '../../components/chatApp'\nclass FundDetails extends Component {\n\n\n\n\tstatic async getInitialProps(props) {\n\t\tconst thisAcc = await web3.eth.getAccounts()\n\t\tconst fund = Fund(props.query.contractAddress);\n\t\tconst summary = await fund.methods.getSummary().call();\n\t\tconst balance = await token.methods.balanceOf(props.query.contractAddress).call();\n\t\tconst tenderAddress = await fund.methods.tenderAddress().call();\n\t\tconst companyAlloted = await fund.methods.CompanyAlloted().call();\n\t\tconst isTenderFinalized = await fund.methods.isTenderFinalized().call();\n\n\t\tlet canFloatTender = true;\n\t\tlet canFinalizeTender = false;\n\t\tlet canBid = false;\n\t\tlet canAddCompanies = false;\n\n\t\tif (tenderAddress.toString() === '0x0000000000000000000000000000000000000000') {\n\n\t\t} else {\n\t\t\t// Tender has already been floated for this instance of Fund.\n\n\t\t\tif (companyAlloted === '0x0000000000000000000000000000000000000000') {\n\t\t\t\t// If no company has been finalized yet.\n\t\t\t\tcanFinalizeTender = true;\n\t\t\t\tcanAddCompanies = true;\n\t\t\t\tcanBid = true;\n\n\t\t\t} else {\n\t\t\t\t// Company has been alloted\n\t\t\t\tcanAddCompanies = false;\n\t\t\t\tcanFinalizeTender = false;\n\t\t\t\tcanBid = false;\n\t\t\t}\n\n\t\t\tcanFloatTender = false;\n\t\t}\n\n\t\tif (!summary[6]) { // summary[6] is IsLastLevel\n\t\t\tcanFloatTender = false;\n\t\t\tcanFinalizeTender = false;\n\t\t\tcanBid = false;\n\t\t}\n\n\t\tlet lowestBid = null;\n\n\t\tif (isTenderFinalized) {\n\t\t\tbidding = Bidding(tenderAddress);\n\t\t\tlowestBid = await bidding.methods.lowestBid().call();\n\t\t}\n\t\tlet dbaddress, hash, isChannelCreated\n\t\ttry {\n\t\t\tconst data = await axios.get('http://54.191.195.43:9999/channel/' + props.query.contractAddress)\n\n\t\t\tdbaddress = data.data.address\n\t\t\thash = data.data.hash\n\t\t\tisChannelCreated = true\n\t\t} catch (err) {\n\t\t\tisChannelCreated = false\n\t\t}\n\t\tlet nameProps\n\t\tPromise.all(summary[5].map(async(pcm,idx)=>{\n\t\t\ttry{\n\t\t\tconst data=await axios.get('http://54.191.195.43:9999/users/' + pcm)\n\t\t\treturn data.data.name\n\t\t\t}catch(e){return 'Anonymous'}\n\t\t\t\n\t\t})\n\t\t).then(names=>nameProps=names)\n\t\t\n\t\t// console.log(tenderAddress.toString());\n\t\t// console.log(companyAlloted.toString());\n\n\t\t// Setting canFloatTender\n\t\treturn {\n\t\t\taddress: props.query.contractAddress, // To pass address coming from URL to contributeForm Component.\n\t\t\tdescription: summary[0],\n\t\t\tmanager: summary[1],\n\t\t\tparentManager: summary[2],\n\t\t\tparent: summary[3],\n\t\t\tchildFunds: summary[4],\n\t\t\tpotentialChildManagers: summary[5],\n\t\t\tpcmNames: nameProps,\n\t\t\tisLastLevel: summary[6],\n\t\t\tcurrentBalance: balance,\n\t\t\ttenderAddress: tenderAddress,\n\t\t\tcompanyAlloted: companyAlloted,\n\t\t\tcanFloatTender: canFloatTender,\n\t\t\tcanFinalizeTender: canFinalizeTender,\n\t\t\tcanBid: canBid,\n\t\t\tcanAddCompanies: canAddCompanies,\n\t\t\tisTenderFinalized: isTenderFinalized,\n\t\t\tlowestBid: lowestBid,\n\t\t\tdbaddress,\n\t\t\thash,\n\t\t\tisChannelCreated,\n\t\t\tthisAcc: thisAcc[0]\n\t\t};\n\t}\n\n\tstate = {\n\t\tvisible: false,\n\t\tloggedIn: false,\n\t\tloading: false,\n\t\tpassEntered: '',\n\t\taddress: '',\n\t\tisChannelCreated:this.props.isChannelCreated,\n\t\terrorMessage:''\n\t}\n\n\t// Helper method to render cards\n\trenderCards() {\n\n\n\n\t\t// Destrcuturing from this.props\n\t\tconst {\n\t\t\tdescription,\n\t\t\tmanager,\n\t\t\tparentManager,\n\t\t\tparent,\n\t\t\tchildFunds,\n\t\t\tpotentialChildManagers,\n\t\t\tisLastLevel,\n\t\t\tcurrentBalance\n\t\t} = this.props;\n\n\t\tconst items = [\n\t\t\t{\n\t\t\t\theader: manager,\n\t\t\t\tmeta: 'Address of manager',\n\t\t\t\tdescription: 'The manager manages Funds in this Campaign',\n\t\t\t\tstyle: { overflowWrap: 'break-word' } // Style to limit overflow of address which is very long.\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: description,\n\t\t\t\tmeta: 'Description of Contract',\n\t\t\t\tdescription: 'Description tells about purpose of this Contract'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: parentManager,\n\t\t\t\tmeta: 'Address of Parent Manager',\n\t\t\t\tdescription: 'Parent manager is manager of Parent of this Contract',\n\t\t\t\tstyle: { overflowWrap: 'break-word' } // Style to limit overflow of address which is very long.\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: parent,\n\t\t\t\tmeta: 'Address of Parent Contract',\n\t\t\t\tdescription: 'Parent contract approved funds for this contract.',\n\t\t\t\tstyle: { overflowWrap: 'break-word' }\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: childFunds.length.toString(),\n\t\t\t\tmeta: 'Number of Child Contracts',\n\t\t\t\tdescription: \"Number of Contracts to which this Contract has alloted funds.\"\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: potentialChildManagers.length.toString(),\n\t\t\t\tmeta: 'Number of Deputy Child Managers',\n\t\t\t\tdescription: \"Number of persons who can become manager of child contract.\"\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: currentBalance,\n\t\t\t\tmeta: 'Fund Balance (GovEth)',\n\t\t\t\tdescription: 'The balance is how much money Contract has right now'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: isLastLevel.toString(),\n\t\t\t\tmeta: 'Is this Last Level Contract?',\n\t\t\t\tdescription: \"A Last Level Contract transfers funds directly to person's address after completion of some milestone.\"\n\t\t\t}\n\t\t];\n\n\t\treturn (\n\t\t\t<Card.Group items={items} />\n\t\t);\n\t}\n\tchannelCreationSubmit = async (event) => {\n\t\tevent.preventDefault()\n\t\tthis.setState({ loading: true })\n\t\tvar salt = bcrypt.genSaltSync(10);\n\t\tvar hash = bcrypt.hashSync(this.state.passEntered, salt);\n\t\t\n\t\tconst response = await axios.post(\n\t\t\t'http://54.191.195.43:9999/channel/create',\n\t\t\t{\n\t\t\t\tname: this.props.address, hash: hash\n\t\t\t},\n\t\t\t{ headers: { 'Content-Type': 'application/json' } }\n\t\t)\n\t\tconsole.log(response.data)\n\t\tthis.setState({loading:false,visible:false,isChannelCreated:true})\n\t\t\n\t}\n\tloginSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tthis.setState({errorMessage:''})\n\t\tif (bcrypt.compareSync(this.state.passEntered, this.props.hash)) {\n\t\t\tthis.setState({ loggedIn: true })\n\t\t}\n\t\telse\n\t\t\tthis.setState({errorMessage:\"Invalid password!\"})\n\n\n\n\t}\n\n\tshowCreationForm() {\n\t\tconsole.log(this.props.thisAcc, this.props.manager)\n\t\tif (this.props.thisAcc !== this.props.manager)\n\t\t\treturn <div><h4>{\"Channel not created and only manager can create channel\"}</h4></div>\n\t\telse\n\t\t\treturn (<div>\n\t\t\t\t<h3>{\"Create Channel\"}</h3>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t\t<input type='password' placeholder='Set password' onChange={event => this.setState({ passEntered: event.target.value })} />\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Button type='submit' onClick={this.channelCreationSubmit} loading={this.state.loading}>Submit</Button>\n\t\t\t\t</Form>\n\t\t\t</div>)\n\t}\n\n\tshowLoginForm() {\n\t\treturn (<div>\n\t\t\t<h3>{\"Login to channel\"}</h3>\n\t\t\t<Form error={!!this.state.errorMessage}>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t<input type='password' placeholder='Enter password' onChange={event => this.setState({ passEntered: event.target.value })} />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Message error header=\"Oops!\" content={this.state.errorMessage} />\n\t\t\t\t<Button type='submit' onClick={this.loginSubmit} loading={this.state.loading}>Submit</Button>\n\t\t\t</Form>\n\t\t</div>)\n\t}\n\n\trender() {\n\t\tconsole.log(this.props.pcmNames)\n\t\treturn (\n\t\t\t<Sidebar.Pushable as={Segment}>\n\t\t\t\t<Sidebar\n\t\t\t\t\tas={Menu}\n\t\t\t\t\tanimation='overlay'\n\t\t\t\t\ticon='labeled'\n\t\t\t\t\tonHide={() => this.setState({ visible: false })}\n\t\t\t\t\tvertical\n\t\t\t\t\tvisible={this.state.visible}\n\t\t\t\t\twidth='very wide'>\n\t\t\t\t\t{!this.state.isChannelCreated\n\t\t\t\t\t\t? this.showCreationForm()\n\t\t\t\t\t\t: (this.state.loggedIn ? <ChatApp address={this.props.dbaddress} pass={this.state.passEntered} id={this.props.thisAcc} /> : this.showLoginForm())}\n\t\t\t\t\t{/* <ChatApp/> */}\n\t\t\t\t</Sidebar>\n\n\t\t\t\t<Sidebar.Pusher>\n\t\t\t\t\t<Segment basic>\n\t\t\t\t\t<Layout\n\t\t\t\t\trender={({setLoading,setNotLoading}) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t<Grid.Column width={10}>\n\t\t\t\t\t\t\t\t\t<Segment textAlign=\"center\" inverted color=\"grey\">\n\t\t\t\t\t\t\t\t\t\t<h3>Fund Details</h3>\n\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t<Grid.Column width={6}>\n\t\t\t\t\t\t\t\t\t<Segment textAlign=\"center\" inverted color=\"grey\">\n\t\t\t\t\t\t\t\t\t\t<h3>Actions</h3>\n\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t<Grid.Column width={10}>\n\t\t\t\t\t\t\t\t\t<Segment textAlign=\"center\">\n\t\t\t\t\t\t\t\t\t\t{this.renderCards()}\n\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t</Grid.Column>\n\n\t\t\t\t\t\t\t\t<Grid.Column width={6}>\n\t\t\t\t\t\t\t\t\t<Segment textAlign=\"center\">\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<AddChildManagerModalForm\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}/>\n\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<PotentialChildManagersModal\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t\tpotentialChildManagers={this.props.potentialChildManagers}\n\t\t\t\t\t\t\t\t\t\t\t\t\tnames={this.props.pcmNames}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t{this.props.isTenderFinalized ? (\n\n\t\t\t\t\t\t\t\t\t\t\t<AllotedCompany\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t\tlowestBid={this.props.lowestBid}\n\t\t\t\t\t\t\t\t\t\t\t\tcompanyAlloted={this.props.companyAlloted}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t{this.props.manager === this.props.parentManager ? (\n\t\t\t\t\t\t\t\t\t\t\t<InjectTokenModalForm\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t<Link route='getFundRequestsByChild' params={{ contractAddress: this.props.address }}>\n\t\t\t\t\t\t\t\t\t\t\t<a>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='eye'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 10 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={!this.props.isLastLevel ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t('View Child Requests') : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Milestone Completion Requests By Company'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={setLoading}\t\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<Link route='getFundRequestsByManager' params={{ contractAddress: this.props.address }}>\n\t\t\t\t\t\t\t\t\t\t\t<a>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='eye'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 10 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={!this.props.isLastLevel ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t('View Manager Requests') :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t('Milestone Assignment by Manager')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={setLoading}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t\t\t{!this.props.isLastLevel ? (\n\t\t\t\t\t\t\t\t\t\t\t<Link route='getChildFunds' params={{ contractAddress: this.props.address }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='eye'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 10 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent='View Child Funds'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={setLoading}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t\t\t{this.props.canFloatTender ? (\n\t\t\t\t\t\t\t\t\t\t\t<FloatTenderModal\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t\t\t{this.props.canFinalizeTender ? (\n\t\t\t\t\t\t\t\t\t\t\t<FinalizeTenderModal\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t\tcompanyAlloted={this.props.companyAlloted}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t\t\t{this.props.canAddCompanies ? (\n\t\t\t\t\t\t\t\t\t\t\t<AddCompanyTenderModalForm\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t\t\t{this.props.canBid ? (\n\t\t\t\t\t\t\t\t\t\t\t<BiddingModalForm\n\t\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t<WithdrawTokenModalForm\n\t\t\t\t\t\t\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\t\t\t\t\t\t\tbalance={this.props.currentBalance}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\t\t\ticon='eye'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 10 }}\n\n\t\t\t\t\t\t\t\t\t\t\tcontent='View chats'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => { this.setState({ visible: (!this.state.visible) }) }}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t</Grid.Column>\n\n\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t</Sidebar.Pusher>\n\t\t\t</Sidebar.Pushable>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\texport default FundDetails;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t// (\n\t\t\t\n// \t\t\t\t\t\t\t\t\t{!this.props.bidInstance.toString() ?\n// \t\t\t\t\t\t\t\t\t(\n// \t\t\t\t\t\t\t\t\t\t{!this.props.companyAlloted ? \n// \t\t\t\t\t\t\t\t\t\t\t(\n\n\n// \t\t\t\t\t\t\t\t\t\t\t) : null\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t)\n\n// \t\t\t\t\t\t\t\t\t: null }\n// \t\t\t\t\t\t\t\t)\n\n\n\n// {this.props.isLastLevel ? (\n// \t\t\t\t\t\t\t\t\t{!!this.props.bidInstance.toString() ? (\n// \t\t\t\t\t\t\t\t\t\t(<Button \n// \t\t\t\t\t\t\t\t\t\t\tprimary\n// \t\t\t\t\t\t\t\t\t\t\ticon='eye'\n// \t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 10 }}\n// \t\t\t\t\t\t\t\t\t\t\tcontent='Finalize Bid'\n// \t\t\t\t\t\t\t\t\t\t/>)\n\n// \t\t\t\t\t\t\t\t\t) : }\n// \t\t\t\t\t\t\t\t) : null}\n\n// \t\t\t\t\t\t\t\t{this.props.isLastLevel ? (\n// \t\t\t\t\t\t\t\t\t(\n// \t\t\t\t\t\t\t\t\t\t{!!this.props.bidInstance.toString() ?\n\n// \t\t\t\t\t\t\t\t\t(<Button \n// \t\t\t\t\t\t\t\t\t\tprimary\n// \t\t\t\t\t\t\t\t\t\ticon='eye'\n// \t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 10 }}\n// \t\t\t\t\t\t\t\t\t\tcontent='Bid Here'\n// \t\t\t\t\t\t\t\t\t/>) : null }\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t) : null}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AA4EA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAAA;AASA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAZA;AAMA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;;;;;;AAhGA;AACA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AAAA;AAEA;;;AA+BA;AAAA;AACA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AADA;AAMA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAYA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AARA;AAYA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AATA;AAeA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAaA;AADA;AAOA;AACA;AAFA;AAQA;AADA;AAOA;AADA;AAQA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAxIA;AADA;AA8JA;;;AA9ZA;;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;;AACA;AACA;;AADA;AACA;;;;AAGA;AACA;;AADA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AAEA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;;;;;;;;;;;AA5EA;AACA;AAoaA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}